
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
			
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;
	
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	// ++ Алькин В.А. Дипломный проект 17.06.2025
	// Отчёты, анализ выставленных актов
	Движения.ВКМ_ОказанныеУслуги.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслугУслуги.Ссылка.Контрагент КАК Клиент,
		|	РеализацияТоваровУслугУслуги.Ссылка.Договор КАК Договор,
		|	РеализацияТоваровУслугУслуги.Номенклатура КАК Услуга,
		|	СУММА(РеализацияТоваровУслугУслуги.Сумма) КАК Сумма
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
		|ГДЕ
		|	РеализацияТоваровУслугУслуги.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслугУслуги.Номенклатура,
		|	РеализацияТоваровУслугУслуги.Ссылка.Контрагент,
		|	РеализацияТоваровУслугУслуги.Ссылка.Договор";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОказанныеУслуги.Добавить();
		Движение.Период = Дата;
		Движение.Клиент = Выборка.Клиент;
		Движение.Договор = Выборка.Договор;
		Движение.Услуга = Выборка.Услуга;
		Движение.Сумма = Выборка.Сумма;
		
	КонецЦикла;	
	// -- Алькин В.А. Дипломный проект от 17.06.2025
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаказПокупателя.Организация КАК Организация,
	|	ЗаказПокупателя.Контрагент КАК Контрагент,
	|	ЗаказПокупателя.Договор КАК Договор,
	|	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	|	ЗаказПокупателя.Товары.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Количество КАК Количество,
	|		Цена КАК Цена,
	|		Сумма КАК Сумма
	|	) КАК Товары,
	|	ЗаказПокупателя.Услуги.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Количество КАК Количество,
	|		Цена КАК Цена,
	|		Сумма КАК Сумма
	|	) КАК Услуги
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ВыполнитьАвтозаполнение() Экспорт
	
	// ++ Алькин В.А. Дипломный проект 13.05.2025
	// Работа с заявками клиентов, заполнение Реализации товаров и услуг
	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	Если Не ЗначениеЗаполнено(НоменклатураАбонентскаяПлата) И Не ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) Тогда
		ОбщегоНазначения.СообщитьПользователю("Ошибка заполнения констант");
		Возврат;
	КонецЕсли;
	
	Услуги.Очистить();
	
	Если ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СуммаАбонентскойПлаты")) Тогда
		НоваяСтрокаТЧ = Услуги.Добавить();
		НоваяСтрокаТЧ.Номенклатура = НоменклатураАбонентскаяПлата;
		НоваяСтрокаТЧ.Сумма = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СуммаАбонентскойПлаты");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_ВыполненыеКлиентуРаботыОбороты.КоличествоЧасовОборот, 0) КАК КоличествоЧасов,
	|	ЕСТЬNULL(ВКМ_ВыполненыеКлиентуРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплате
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненыеКлиентуРаботы.Обороты(&ДатаНачала, &ДатаОкончания, , Договор = &Договор) КАК ВКМ_ВыполненыеКлиентуРаботыОбороты";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Договор", Договор);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрокаТЧ = Услуги.Добавить();
		НоваяСтрокаТЧ.Номенклатура = НоменклатураРаботыСпециалиста;
		НоваяСтрокаТЧ.Количество = ВыборкаДетальныеЗаписи.КоличествоЧасов;
		НоваяСтрокаТЧ.Сумма = ВыборкаДетальныеЗаписи.СуммаКОплате;
	КонецЦикла;
	// -- Алькин В.А. Дипломный проект 13.05.2025
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
