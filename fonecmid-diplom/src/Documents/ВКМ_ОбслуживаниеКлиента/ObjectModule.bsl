
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		НовыйЭлемент = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		НовыйЭлемент.ТекстСообщения = "Создан новый документ Обслуживание клиента";
		НовыйЭлемент.Записать();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Договор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Договор");
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, 
	"ВидДоговора, ВКМ_НачалоДействияДоговора, ВКМ_ОкончаниеДействияДоговора");
	
	Если Реквизиты.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбоненскоеОбслуживание Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Вид договора не абонетское обслуживание");
		Возврат;
	КонецЕсли;
	
	Если Дата < Реквизиты.ВКМ_НачалоДействияДоговора И Дата > Реквизиты.ВКМ_ОкончаниеДействияДоговора Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Дата документа лежит за периодом действия договора"); 
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		Движения.ВКМ_ВыполненыеКлиентуРаботы.Записывать = Истина;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Клиент КАК Клиент,
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Договор КАК Договор,
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
		|	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ФактическиПотраченоЧасов) КАК ФактическиПотраченоЧасов,
		|	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК ЧасыКОплатеКлиенту
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Клиент,
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Договор,
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Договор.ВКМ_СтоимостьЧасаРаботы";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Движение = Движения.ВКМ_ВыполненыеКлиентуРаботы.ДобавитьПриход();
			Движение.Период = Дата;
			Движение.Клиент = Выборка.Клиент;
			Движение.Договор = Выборка.Договор;
			Движение.КоличествоЧасов = Выборка.ЧасыКОплатеКлиенту;
			Движение.СуммаКОплате = Выборка.СтоимостьЧасаРаботы * Выборка.ЧасыКОплатеКлиенту;			
			
		КонецЦикла;
		
	КонецЕсли;
	
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка КАК Ссылка,
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист,
		|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК Период,
		|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот, 0) КАК ПроцентОтРабот
		|ПОМЕСТИТЬ ВТ_ПроцентОтРаботСпециалисту
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, ) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО ВКМ_ОбслуживаниеКлиента.Специалист = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка КАК Ссылка,
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
		|	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК ЧасыКОплатеКлиенту
		|ПОМЕСТИТЬ ВТ_ЧасовКОплатеСтавкаЧаса
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка,
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Договор.ВКМ_СтоимостьЧасаРаботы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПроцентОтРаботСпециалисту.Специалист КАК Специалист,
		|	ВТ_ПроцентОтРаботСпециалисту.ПроцентОтРабот КАК ПроцентОтРабот,
		|	ВТ_ПроцентОтРаботСпециалисту.Период КАК Период,
		|	ВТ_ЧасовКОплатеСтавкаЧаса.ЧасыКОплатеКлиенту КАК ЧасыКОплатеКлиенту,
		|	ВТ_ЧасовКОплатеСтавкаЧаса.СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы
		|ИЗ
		|	ВТ_ПроцентОтРаботСпециалисту КАК ВТ_ПроцентОтРаботСпециалисту
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЧасовКОплатеСтавкаЧаса КАК ВТ_ЧасовКОплатеСтавкаЧаса
		|		ПО ВТ_ПроцентОтРаботСпециалисту.Ссылка = ВТ_ЧасовКОплатеСтавкаЧаса.Ссылка";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Период = Дата("00010101") Тогда
			Шаблон = "Специалисту %1 не установлен процент оплаты от работ на %2";
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(Шаблон, Выборка.Специалист, Формат(НачалоМесяца(Дата), "ДФ=MM.yyyy")));
			Отказ = Истина;
			Продолжить;		
		КонецЕсли;
		
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Специалист;
		Движение.ЧасовКОплате = Выборка.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = Выборка.ЧасыКОплатеКлиенту * Выборка.СтоимостьЧасаРаботы * Выборка.ПроцентОтРабот / 100;		
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Иначе
  	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
