 
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	НовыйДокумент = РеквизитФормыВЗначение("Объект").ЭтоНовый();
	
	Если Не НовыйДокумент Тогда
		ЗаписываетсяПервыйРаз = Ложь;
		Специалист = Объект.Специалист;
		ДатаПроведенияРабот = Объект.ДатаПроведенияРабот; 
		ВремяНачалаРаботПлан = Объект.ВремяНачалаРаботПлан; 
		ВремяОкончанияРаботПлан = Объект.ВремяОкончанияРаботПлан;
	Иначе
		ЗаписываетсяПервыйРаз = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Оповестить("Запись_ВКМ_ОбслуживаниеКлиента", , ЭтотОбъект);		
		
КонецПроцедуры

#КонецОбласти
 
#Область ОбработчикиСобытийЭлементовШапкиФормы 

&НаКлиенте
Процедура СпециалистПриИзменении(Элемент)
	
	ПриИзмененииДанных(Объект.Специалист, Специалист, "Назначен новый специалист");
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПроведенияРаботПриИзменении(Элемент)
	
	ПриИзмененииДанных(Объект.ДатаПроведенияРабот, ДатаПроведенияРабот, "Назначена новая дата");
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалаРаботПланПриИзменении(Элемент)
	
	ПриИзмененииДанных(Объект.ВремяНачалаРаботПлан, ВремяНачалаРаботПлан, "Назначено новое время начала работ");
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончанияРаботПланПриИзменении(Элемент)
	
	ПриИзмененииДанных(Объект.ВремяОкончанияРаботПлан, ВремяОкончанияРаботПлан, "Назначено новое время окончания работ");
	
КонецПроцедуры

#КонецОбласти 
 
#Область СлужебныеПроцедурыИФункции

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаСервере
Процедура ПриИзмененииДанных(НовыйРеквизит, СтарыйРеквизит, Текст)
	
	Если Не ЗаписываетсяПервыйРаз Тогда
		Если НовыйРеквизит <> СтарыйРеквизит Тогда
			НовыйЭлемент = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
			НовыйЭлемент.ТекстСообщения = СтрШаблон("%1 в документе %2", Текст, Объект.Ссылка);
			НовыйЭлемент.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
